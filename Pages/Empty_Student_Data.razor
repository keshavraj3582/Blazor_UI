@page "/truncate-database"
@using Blazored.Toast.Configuration;
@using Blazored.Toast.Services;
@inject HttpClient httpClient
@inject IToastService toastService

<h3>Truncate Database</h3>

<p>This will delete all records from the database. Are you sure you want to proceed?</p>

<button class="btn btn-danger" @onclick="ShowDeleteConfirmationModal">Truncate Database</button>

<CustomModal @bind-IsVisible="isModalVisible" Title="Delete Confirmation">
    <div class="confirmation">
        Are you sure you want to delete the student with ID @studentId?
    </div>
    <button class="btn btn-danger" @onclick="TruncateDatabase">Yes</button>
    <button class="btn btn-primary" @onclick="CloseDeleteConfirmationModal">No</button>
</CustomModal>

@if (isDeleted)
{
    <p> @deletedStudentId.</p>
}

@code {
    private string studentId="All records has been Deleted";
    private bool isDeleted = false;
    private string deletedStudentId = "";
    private bool isModalVisible = false;

    private async Task ShowDeleteConfirmationModal()
    {
        isModalVisible = true;
    }

    private async Task CloseDeleteConfirmationModal()
    {
        isModalVisible = false;
    }

    private async Task TruncateDatabase()
    {
        var response = await httpClient.DeleteAsync("https://localhost:7078/api/Student/database");

        if (response.IsSuccessStatusCode)
        {
            isDeleted = true;
            deletedStudentId = studentId;
            isModalVisible = false;

        }
        else
        {
            isDeleted = false;
            deletedStudentId = "Error!";
        }

    }
}

